import{_ as l,r as p,o as i,c as u,a as n,b as a,w as e,F as r,e as s,d as o}from"./app.c3917a5c.js";const d={},k=n("h1",{id:"getting-started",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#getting-started","aria-hidden":"true"},"#"),s(" Getting Started")],-1),v={class:"table-of-contents"},m=s("Prerequisites"),g=s("Installation"),b=s("Mount to HTML"),h=s("State Sharing"),y=o(`<h2 id="prerequisites" tabindex="-1"><a class="header-anchor" href="#prerequisites" aria-hidden="true">#</a> Prerequisites</h2><ul><li>Vue 3+</li></ul><p>This library won&#39;t support Vue 2 and below.</p><h2 id="installation" tabindex="-1"><a class="header-anchor" href="#installation" aria-hidden="true">#</a> Installation</h2><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">npm</span> inatll vue-html-meta
<span class="token comment"># or</span>
<span class="token function">yarn</span> <span class="token function">add</span> vue-html-meta
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Install the plugin to your Vue app:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> createApp <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> createMeta <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue-html-meta&#39;</span>

<span class="token keyword">const</span> app <span class="token operator">=</span> <span class="token function">createApp</span><span class="token punctuation">(</span>App<span class="token punctuation">)</span>

<span class="token keyword">const</span> meta <span class="token operator">=</span> <span class="token function">createMeta</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
app<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>meta<span class="token punctuation">)</span>
</code></pre><div class="highlight-lines"><br><div class="highlight-line">\xA0</div><br><br><br><div class="highlight-line">\xA0</div><div class="highlight-line">\xA0</div></div><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="mount-to-html" tabindex="-1"><a class="header-anchor" href="#mount-to-html" aria-hidden="true">#</a> Mount to HTML</h2>`,8),f=n("code",null,"mountMeta",-1),_=s(" is "),w={href:"https://vuejs.org/guide/reusability/composables.html",target:"_blank",rel:"noopener noreferrer"},x=s("Vue Composable"),M=s(". It returns "),j=n("code",null,"ref",-1),q=s("s for setting meta information."),T=o(`<div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">import</span> <span class="token punctuation">{</span> mountMeta <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue-html-meta&#39;</span>

<span class="token keyword">const</span> <span class="token punctuation">{</span> title<span class="token punctuation">,</span> meta<span class="token punctuation">,</span> jsonld <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">mountMeta</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

title<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token string">&#39;My Page&#39;</span>
meta<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;description&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">content</span><span class="token operator">:</span> <span class="token string">&#39;hello&#39;</span> <span class="token punctuation">}</span>
<span class="token punctuation">]</span>
jsonld<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token string-property property">&#39;@context&#39;</span><span class="token operator">:</span> <span class="token string">&#39;https://schema.org&#39;</span>
<span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>The metadata are rendered in the <code>&lt;head&gt;</code> tag:</p><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>My Page<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>description<span class="token punctuation">&quot;</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>hello<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>application/ld+json<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"><span class="token punctuation">{</span><span class="token string-property property">&quot;@context&quot;</span><span class="token operator">:</span><span class="token string">&quot;https://schema.org&quot;</span><span class="token punctuation">}</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>These tags are automatically removed when the component is unmounted.</p><p>Changing the value of the <code>ref</code>s reacts to the DOM.</p><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">import</span> <span class="token punctuation">{</span> mountMeta <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue-html-meta&#39;</span>

<span class="token keyword">const</span> <span class="token punctuation">{</span> title <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">mountMeta</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

title<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token string">&#39;loading&#39;</span>

<span class="token comment">// &lt;title&gt; will be changed with a new value</span>
api<span class="token punctuation">.</span>get<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> title<span class="token punctuation">.</span>value <span class="token operator">=</span> value<span class="token punctuation">.</span>title<span class="token punctuation">)</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>You can also use <code>reactive</code>:</p><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">import</span> <span class="token punctuation">{</span> reactive <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> mountMeta <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vue-html-meta&#39;</span>

<span class="token keyword">const</span> meta <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token function">mountMeta</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

meta<span class="token punctuation">.</span>title <span class="token operator">=</span> <span class="token string">&#39;My Page&#39;</span>
meta<span class="token punctuation">.</span>meta <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;description&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">content</span><span class="token operator">:</span> <span class="token string">&#39;hello&#39;</span> <span class="token punctuation">}</span>
<span class="token punctuation">]</span>
meta<span class="token punctuation">.</span>jsonld <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token string-property property">&#39;@context&#39;</span><span class="token operator">:</span> <span class="token string">&#39;https://schema.org&#39;</span>
<span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container tip"><p class="custom-container-title">TIP</p><p><code>mountMeta</code> is only works in <code>setup()</code> or other Composable.</p></div><h2 id="state-sharing" tabindex="-1"><a class="header-anchor" href="#state-sharing" aria-hidden="true">#</a> State Sharing</h2><p><code>mountMeta</code> always returns new <code>ref</code>s. It mounts HTML individually for each call. It is the user&#39;s responsibility to ensure that the content is not redundant.</p><p>For example, this is not the desired state, but it is correct behavior:</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// in Component A setup</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> title <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">mountMeta</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
title<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token string">&#39;A&#39;</span>

<span class="token comment">// in Component B setup</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> title <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">mountMeta</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
title<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token string">&#39;B&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>A</span> <span class="token punctuation">/&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>B</span> <span class="token punctuation">/&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>A<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">&gt;</span></span>B<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>You can use <code>provide</code>/<code>inject</code> or state management libraries to share <code>ref</code>s between components.</p><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token comment">// in root component</span>

<span class="token comment">// ...</span>

<span class="token keyword">const</span> <span class="token punctuation">{</span> title <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">mountMeta</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">function</span> <span class="token function">updateTitle</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  title<span class="token punctuation">.</span>value <span class="token operator">=</span> value
<span class="token punctuation">}</span>

<span class="token function">provide</span><span class="token punctuation">(</span><span class="token string">&#39;title&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> updateTitle <span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">// in child component</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> updateTitle <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">inject</span><span class="token punctuation">(</span><span class="token string">&#39;title&#39;</span><span class="token punctuation">)</span>
<span class="token function">updateTitle</span><span class="token punctuation">(</span><span class="token string">&#39;A&#39;</span><span class="token punctuation">)</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-vue ext-vue line-numbers-mode"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">const</span> <span class="token punctuation">{</span> title <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">mountMeta</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment">// computed_title will be computed very complicatedly, probably</span>
<span class="token keyword">const</span> computed_title <span class="token operator">=</span> <span class="token comment">/* your store */</span>

<span class="token function">watch</span><span class="token punctuation">(</span>computed_title<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">next</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> title<span class="token punctuation">.</span>value <span class="token operator">=</span> next<span class="token punctuation">)</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,18);function I(A,V){const t=p("RouterLink"),c=p("ExternalLinkIcon");return i(),u(r,null,[k,n("nav",v,[n("ul",null,[n("li",null,[a(t,{to:"#prerequisites"},{default:e(()=>[m]),_:1})]),n("li",null,[a(t,{to:"#installation"},{default:e(()=>[g]),_:1})]),n("li",null,[a(t,{to:"#mount-to-html"},{default:e(()=>[b]),_:1})]),n("li",null,[a(t,{to:"#state-sharing"},{default:e(()=>[h]),_:1})])])]),y,n("p",null,[f,_,n("a",w,[x,a(c)]),M,j,q]),T],64)}var C=l(d,[["render",I],["__file","getting-started.html.vue"]]);export{C as default};
